{"leetcode":{"easy":5,"hard":2,"medium":5,"shas":{"0179-largest-number":{"0179-largest-number.cpp":"f3eb9eb9679c00d1cfe496fdfaf178d0227ea4b3","README.md":"039ece5f1090490107e1fb702ac1565ead54be25"},"3568-find-the-key-of-the-numbers":{"3568-find-the-key-of-the-numbers.cpp":"3b24e4e96f909a9f5366a0e712cb2d476b895e91","README.md":"4d17de1429b7d7f1eb6773ca6a1c87b6133aebf7","difficulty":"easy"},"README.md":{"":"43631f1ac4988b9d1db870573e009560954defc1"},"2284-smallest-value-of-the-rearranged-number":{"2284-smallest-value-of-the-rearranged-number.cpp":"c19c789d19cbfb838376b3e17fdfe93da5f3bf68","README.md":"5da9704562c4658819d50defffd0a4c3076cea8e","difficulty":"medium"},"stats.json":{"":"b9bf308e995c4c29a54a8e23b5e8163a4d6307da"},"0028-find-the-index-of-the-first-occurrence-in-a-string":{"0028-find-the-index-of-the-first-occurrence-in-a-string.cpp":"7b9644dc8f8b76f3f9a2933b6f125a0818f87889","README.md":"60a38c1aa8acb919956578f278c9060fb7db97b8","difficulty":"easy"},"1434-decrypt-string-from-alphabet-to-integer-mapping":{"1434-decrypt-string-from-alphabet-to-integer-mapping.cpp":"e4b90424e2fd454203183173aa40d4a8f89a3cae","README.md":"0107fa1e807faec1412d9405bb7ecee42c7db00c","difficulty":"easy"},"0242-valid-anagram":{"0242-valid-anagram.cpp":"ae8a8c0e6b9a7b9a8e9aa2dded8c595c3b00cc53","README.md":"7216cfc7074105cd2f2a50ce61da29ee3295b549","difficulty":"easy"},"0295-find-median-from-data-stream":{"0295-find-median-from-data-stream.cpp":"6a2bf6c1c640c08ff9a2f3a3712beb79b01891d7","README.md":"3c2f504ea14d2bd69bf59cdb86cd99731923e124","difficulty":"hard"},"0038-count-and-say":{"0038-count-and-say.cpp":"c92218d39c5258d2dd22d06a37cbb7674c103b9c","README.md":"8ad8a0c57bd9542392588b66768a3cb3695ad51c","difficulty":"medium"},"0165-compare-version-numbers":{"0165-compare-version-numbers.cpp":"8b12044eccd11a67af6b0791b9637cff890fa27a","README.md":"25173ea14f790b3ab4a9d3165ee9e6da927f958d","difficulty":"medium"},"0124-binary-tree-maximum-path-sum":{"0124-binary-tree-maximum-path-sum.cpp":"1b2b55a4cbe9022c2852bc4ff16c00daac283b17","README.md":"ffa0bc8c9c787efac4955cef573cc6ed99caf29a","difficulty":"hard"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp":"cd1ce9a40e9805e220a95deb83217ffef2bfe3ae","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.cpp":"79f30e20df204ef6d5c9c3553ee5e76ded177871","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"},"0101-symmetric-tree":{"0101-symmetric-tree.cpp":"056264cc99f96d658a06704ccf6d696850bf69b6","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"}},"solved":12}}